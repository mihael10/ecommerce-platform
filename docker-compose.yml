version: '3.7'
services:
  postgres-order:
    container_name: postgres-order
    image: postgres
    environment:
      POSTGRES_DB: order-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Programmer
      PGDATA: /data/postgres
    volumes:
      - ./postgres-order:/data/postgres
    ports:
      - "5431:5431"
    restart: always

  postgres-inventory:
    container_name: postgres-inventory
    image: postgres
    environment:
      POSTGRES_DB: inventory-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      PGDATA: /data/postgres
    volumes:
      - ./postgres-inventory:/data/postgres
    ports:
      - "5433:5432"
    restart: always

  postgres-user:
    container_name: postgres-user
    image: postgres
    environment:
      POSTGRES_DB: user-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      PGDATA: /data/postgres
    volumes:
      - ./postgres-user:/data/postgres
    ports:
      - "5434:5432"
    restart: always

  mongo:
    container_name: mongo
    image: mongo:4.4.14-rc0-focal
    restart: always
    ports:
      - "27018:27017"
    volumes:
      - ./mongo-data:/data/db

  keycloak-mysql:
    container_name: keycloak-mysql
    image: mysql:5.7
    volumes:
      - ./mysql_keycloak_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:18.0.0
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: keycloak-mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "9999:8080"
    volumes:
      - ./realms/:/opt/keycloak/data/import/
    depends_on:
      - keycloak-mysql

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"

  discovery-server:
    image: ecommerce-platform/discovery-server:latest
    container_name: discovery-server
    ports:
      - "8761:8761"
    depends_on:
      - zipkin

  api-gateway:
    image: ecommerce-platform/api-gateway:latest
    container_name: api-gateway
    ports:
      - "8181:8080"
    depends_on:
      - zipkin
      - discovery-server
      - keycloak

  product-service:
    image: ecommerce-platform/product-service:latest
    container_name: product-service
    ports:
      - "8082:8080"
    depends_on:
      - mongo
      - discovery-server
      - api-gateway

  order-service:
    image: ecommerce-platform/order-service:latest
    container_name: order-service
    ports:
      - "8083:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-order:5431/order-service
    depends_on:
      - postgres-order
      - zipkin
      - discovery-server
      - api-gateway

  inventory-service:
    image: ecommerce-platform/inventory-service:latest
    container_name: inventory-service
    ports:
      - "8084:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-inventory:5432/inventory-service
    depends_on:
      - postgres-inventory
      - discovery-server
      - api-gateway

  user-service:
    image: ecommerce-platform/user-service:latest
    container_name: user-service
    ports:
      - "8086:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-user:5432/user-service
    depends_on:
      - postgres-user
      - discovery-server
      - api-gateway

  notification-service:
    image: ecommerce-platform/notification-service:latest
    container_name: notification-service
    ports:
      - "8085:8080"
    depends_on:
      - zipkin
      - discovery-server
      - api-gateway

#  prometheus:
#    image: prom/prometheus:v2.37.1
#    container_name: prometheus
#    ports:
#      - "9090:9090"
#    volumes:
#      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#    depends_on:
#      - product-service
#      - inventory-service
#      - order-service
#      - notification-service

#  grafana:
#      image: grafana/grafana-oss:8.5.2
#      container_name: grafana
#      ports:
#        - "3000:3000"
#      links:
#        - prometheus:prometheus
#      volumes:
#        - ./grafana:/var/lib/grafana
#      environment:
#        GF_SECURITY_ADMIN_USER: admin
#        GF_SECURITY_ADMIN_PASSWORD: password
